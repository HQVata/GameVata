Клиентская часть.
Клиент должен подключаться к серверу по протоколу TCP/IP. Обмен данными будет проводиться по формату JSON.
В задачи клиента входит следующее:
*Коммуникация с сервером;
*Сериализация запросов на сервер в формат JSON;
*Десериализация ответов сервера;
*Отрисовка получиных данных в произвольном формате.
пример отрисовки:
   a  b  c
1||_||0||X||
2||0||_||_||
3||X||_||_||
{ваш ход}
c,3

Жизненный цикл клиента.
1.подключение к серверу. TcpSocket
2.отправка логина.
3.получение подтверждения
3.ожидание пакета с данными по игре.
4.отправка данных о сделанном ходе.
5.возвращаться к пункту 3 до окончания игры
6.вывести информацию о победителе

Формат общения клиента с сервером
Команды клиента:
Логин(Нужен для авторизации клиента на сервере)
Ход(Координаты хода)
Запрос информации об игре(возможно не будет использоваться)
Команды сервера:
подтверждение логина
информация об игре(Расположение крестиков и ноликов, информация об игроках, статус победителя)
запрос хода(возможно не будет использоваться)
ошибка(Информация о не корректности логина, хода либо другого запроса)

Пакеты.
Пакет является обдерткой над передаваемыми данными по протоколу TCP/IP. В нем хранится информация о начале, способе обработки, длинне пакета. А так же контроляная сумма пакета для проверки целосности принятого пакета.
Пакет для обеспечения передачи информации между клиентом и сервером сообщение должно быть сформировано в следующем формате.
||SB||CMD||DL||DATA||CRC||
CMD(Command) - команда. Определяет способ обработки данного пакета. (1 байт)
DL(Data Length) - длинна поля данных(DATA) (2 байта) Необходима при чтении пакета.
DATA(Data) - данные в формате json (DL байт)
CRC(Cyclic Redundancy Code) - контрольная сумма. (2 байта) Контрольная сумма считается для полей CMD, DL и DATA.
SB(Start Byte) - признак начала пакета. (1 байт) Для разделения сообщений используется алгоритм Byte Stuffing. 
https://en.wikipedia.org/wiki/Consistent_Overhead_Byte_Stuffing
В качестве начального байта используется "0х00" 
В пакете все байты 0х00 заменяются на 0х0102. 0х01 заменяем на 0х0103.

0x00
0x0102 --> 0x00
0x0103 --> 0x01

Процедуру Byte Stuffing следует проводить после формирования пакета включая CRC.
Поля DL и CRC записаны младшим байтом вперед.

Игра.
Игра — модуль отвечающий за логику игры. Игра должна принимать пакеты в формате json и формировать пакеты в том же формате для передачи клиентам.
Игра должна обладать следующими функциями:
Хранить информацию об игроках.
Хранить информацию о состоянии игрового поля.
Хранить информацию о победителе.
Выполнить игровое действие(ход) с определением очередности.
Формировать сообщение об ошибках(ход не в очередь, не верный ход)
Формировать сообщение о статусе игры(игровое поле, информация о победителе, информация об очереди хода)
Перезапускать игру.

